// Graph storage using adjacency matrix -*- C++ -*-

// Copyright (C) 1997-2017 Free Software Foundation, Inc.
//
// This file is part of the Polaris C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// Under Section 7 of GPL version 3, you are granted additional
// permissions described in the GCC Runtime Library Exception, version
// 3.1, as published by the Free Software Foundation.

// You should have received a copy of the GNU General Public License and
// a copy of the GCC Runtime Library Exception along with this program;
// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
// <http://www.gnu.org/licenses/>.

/** @file     bits/graph/adj_matrix
 *  @brief    Graph storage using adjacency matrix
 *  @author   Polaris Zhao
 *  @version  3.0
 *  @todo     Incomplete.
 *
 *  This is a Polaris C++ Library header.
**/

#ifndef _POLLIB_GRAPH_ADJ_MATRIX
#define _POLLIB_GRAPH_ADJ_MATRIX 1

#pragma GCC system_header

#include <polaris/version>
#include <iosfwd>

namespace polaris
{

template<typename _Tp, typename _Pred>
class adjmatrix;

template<typename _T, typename _P>
std::istream&
operator >> (std::istream& __in, adjmatrix<_T, _P>& __scc);

template<typename _T, typename _P>
std::ostream&
operator << (std::ostream& __out, const adjmatrix<_T, _P>& __scc);

}

#include <polaris/bits/graph/edge>
#include <polaris/bits/graph/adj_matrix.h>
#include <polaris/bits/graph/adjmatrix.tcc>

#endif /* _POLLIB_GRAPH_ADJ_MATRIX */
