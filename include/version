// Library version and configurations -*- C++ -*-

// Copyright (C) 1997-2017 Free Software Foundation, Inc.
//
// This file is part of the Polaris C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// Under Section 7 of GPL version 3, you are granted additional
// permissions described in the GCC Runtime Library Exception, version
// 3.1, as published by the Free Software Foundation.

// You should have received a copy of the GNU General Public License and
// a copy of the GCC Runtime Library Exception along with this program;
// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
// <http://www.gnu.org/licenses/>.

/** @file     version
 *  @brief    Library version and configurations
 *  @author   Polaris Zhao
 *  @version  3.0
 *
 *  This is a Polaris C++ Library header.
**/

#ifndef _POLLIB_VERSION
#define _POLLIB_VERSION 1

/** @brief  Major version of the library **/
#define __POLLIB__ 3

/** @brief  Minor version of the library **/
#define __POLLIB_MINOR__ 0

/** @brief  Patch level of the library **/
#define __POLLIB_PATCHLEVEL__ 4

#if __cplusplus < 201703L
#error polaris library generally need c++17 or later versions
#endif

#include <iosfwd>

#if __has_include(<version>)
#include <version> // C++20
#endif

/** @namespace  polaris
 *  @brief      Library namespace
**/
namespace polaris
{

using size_t = std::size_t; /// Size type
using ptrdiff_t = std::ptrdiff_t; /// Pointer difference type

/** @brief Bytes of @c char **/
constexpr size_t char_byte = sizeof(char);

/** @brief Bits of @c char **/
constexpr size_t char_bit = __CHAR_BIT__ * char_byte;

/** @brief @c npos for the library **/
constexpr size_t npos = static_cast<size_t>(-1);

/** @brief A blank tag struct **/
struct blank {};

/** @brief Signed type tag struct **/
struct signed_type : blank {};

/** @brief Unsigned type tag struct **/
struct unsigned_type : blank {};

struct size_tag_t : blank {}; /// Size tag type
inline constexpr size_tag_t size_tag; /// Size tag

struct uninitialized_tag_t : blank {}; /// Uninitialized tag type
inline constexpr uninitialized_tag_t uninitialized_tag; /// Uninitialized tag

}

#if !POL_NO_NAMESPACE_ALIAS
/** @namespace pol
 *  @brief     Short namespace alias for the library
**/
namespace pol = polaris;
#endif

#endif /* _POLLIB_VERSION */
