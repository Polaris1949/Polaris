// Format support from third-party library -*- C++ -*-

// Copyright (C) 2004-2019 Free Software Foundation, Inc.
//
// This file is part of the Polaris C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// Under Section 7 of GPL version 3, you are granted additional
// permissions described in the GCC Runtime Library Exception, version
// 3.1, as published by the Free Software Foundation.

// You should have received a copy of the GNU General Public License and
// a copy of the GCC Runtime Library Exception along with this program;
// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
// <http://www.gnu.org/licenses/>.

/** @file     format
 *  @brief    Format support from third-party library
 *  @author   Polaris Zhao
 *  @version  0.8.0
 *  @note     Require library from <https://github.com/fmtlib/fmt>.
 *  @attention  Add option @c -lfmt to link it.
 *
 *  This is a Polaris C++ Library header.
**/

#ifndef _POLLIB_FORMAT
#define _POLLIB_FORMAT 1

#include <pol/version>

#if __has_include(<fmt/format.h>)
#include <string>
#include <utility>
#include <fmt/format.h>
#include <fmt/color.h>
#include <fmt/ostream.h>

namespace pol
{

namespace __format
{
// only support single thread
extern std::string buffer;
}

template<typename... _Args>
[[nodiscard]] const char*
format(_Args&&... __args)
{
    __format::buffer = fmt::format(std::forward<_Args&&>(__args)...);
    return __format::buffer.data();
}

}
#else
#error required ibrary not found
#endif

#endif /* _POLLIB_FORMAT */
