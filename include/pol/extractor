// Extractor library -*- C++ -*-

// Copyright (C) 1997-2017 Free Software Foundation, Inc.
//
// This file is part of the Polaris C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// Under Section 7 of GPL version 3, you are granted additional
// permissions described in the GCC Runtime Library Exception, version
// 3.1, as published by the Free Software Foundation.

// You should have received a copy of the GNU General Public License and
// a copy of the GCC Runtime Library Exception along with this program;
// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
// <http://www.gnu.org/licenses/>.

/** @file        extractor
 *  @brief       Extractor library
 *  @author      Polaris Zhao
 *  @version     0.8.0
 *  @todo        Revision.
 *  @deprecated  This library is thought to be removed in a future version.
 *
 *  This is a Polaris C++ Library header.
**/

#ifndef _POLLIB_EXTRACTOR
#define _POLLIB_EXTRACTOR 1

#include <pol/version>

namespace pol
{

template<typename _Seq>
class data_extractor
{
public:
    typedef _Seq sequence_type;
    typedef typename _Seq::value_type value_type;
    typedef typename _Seq::iterator iterator;

private:
    const _Seq* _M_data;
    typename _Seq::iterator _M_iter;

public:
    data_extractor(const _Seq& __data)
        : _M_data(&__data), _M_iter(__data.begin())
    {}

    const value_type&
    extract()
    {
        return *_M_iter++;
    }
};

}

#endif /* _POLLIB_EXTRACTOR */
